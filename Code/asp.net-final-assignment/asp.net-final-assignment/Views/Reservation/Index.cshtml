@model ReservationIndexVM
@{
    ViewData["Title"] = "Reservations";
}

<style>
    html, body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #fff;
    }

    .navbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 24px 48px;
        border-bottom: 1px solid #e0e0e0;
        margin-bottom: 24px;
    }

    .navbar-left {
        display: flex;
        flex-direction: column;
    }

    .nav-tabs {
        display: flex;
        gap: 16px;
        margin-top: 12px;
    }

        .nav-tabs a {
            padding: 14px 22px;
            font-size: 16px;
            border: none;
            border-radius: 8px;
            background-color: #f2f2f2;
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.2s ease;
            text-decoration: none;
            color: #000;
        }

            .nav-tabs a:hover {
                background-color: #ddd;
            }

            .nav-tabs a.active {
                background-color: #000;
                color: white;
            }

    .account-wrapper {
        display: flex;
        align-items: center;
        position: relative;
        cursor: pointer;
    }

        .account-wrapper img {
            width: 56px;
            height: 56px;
            border-radius: 50%;
            object-fit: cover;
        }

        .account-wrapper .arrow {
            margin-left: 8px;
            font-size: 18px;
            color: #555;
            transition: transform 0.2s ease;
        }

        .account-wrapper:hover .arrow {
            transform: rotate(180deg);
        }

    .dropdown {
        position: absolute;
        top: 68px;
        right: 0;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 10px 0;
        width: 120px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        z-index: 100;
    }

        .dropdown a {
            display: block;
            padding: 10px 16px;
            text-decoration: none;
            color: #333;
            font-size: 16px;
        }

            .dropdown a:hover {
                background-color: #f5f5f5;
            }

    .hidden {
        display: none;
    }

    .container {
        padding: 0 48px;
        font-size: 18px;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 24px;
        font-size: 18px;
    }

        .table th, .table td {
            padding: 12px 16px;
            text-align: left;
            border-bottom: 1px solid #eee;
            white-space: nowrap;
        }

        .table th {
            font-weight: bold;
        }

    .pill {
        padding: 4px 10px;
        border-radius: 12px;
        background-color: #f0f0f0;
        display: inline-block;
        font-size: 12px;
    }

    .search-section {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 16px;
    }

        .search-section input[type="text"] {
            padding: 8px 12px;
            font-size: 18px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        .search-section button {
            padding: 8px 14px;
            font-size: 18px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .search-section .search-btn {
            background-color: #f0f0f0;
            color: black;
        }

            .search-section .search-btn:hover {
                background-color: #ddd;
            }

        .search-section .add-btn {
            background-color: #4CAF50;
            color: white;
        }

            .search-section .add-btn:hover {
                background-color: #45a049;
            }

    .card-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.4);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 999;
    }

    .card {
        background-color: #fff;
        padding: 32px;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        width: 400px;
        position: relative;
    }

        .card h3 {
            margin-top: 0;
            font-size: 18px;
            margin-bottom: 16px;
        }

        .card input,
        .card select {
            width: 100%;
            margin-bottom: 16px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 6px;
            font-size: 18px;
            box-sizing: border-box;
        }

        .card button {
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            width: 100%;
            border: none;
            border-radius: 6px;
            font-size: 18px;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

            .card button:hover {
                background-color: #45a049;
            }

    .close-icon {
        position: absolute;
        top: 12px;
        right: 12px;
        cursor: pointer;
        font-size: 18px;
        color: #888;
    }

        .close-icon:hover {
            color: #000;
        }

    .action-buttons {
        display: flex;
        gap: 10px;
    }

    .edit-btn,
    .delete-btn {
        padding: 6px 12px;
        font-size: 16px;
        border: none;
        border-radius: 6px;
        cursor: pointer;
    }

    .edit-btn {
        background-color: #2196F3;
        color: white;
    }

        .edit-btn:hover {
            background-color: #0b7dda;
        }

    .delete-btn {
        background-color: #f44336;
        color: white;
        text-decoration: none;
    }

        .delete-btn:hover {
            background-color: #d32f2f;
        }
</style>

<!-- Nav Bar and Account-->
<div class="navbar">
    <div class="navbar-left">
        <h2>Vehicle Rental Management</h2>
        <div class="nav-tabs">
            <a href="/">Dashboard</a>
            <a href="/vehicles">Vehicles</a>
            <a href="/reservations" class="active">Reservations</a>
            <a href="/customers">Customers</a>
            <a href="/reports">Reports</a>
        </div>
    </div>
    <div class="account-wrapper" onclick="toggleDropdown()">
        <img src="https://www.svgrepo.com/show/384674/account-avatar-profile-user-11.svg" />
        <span class="arrow">▼</span>
        <div id="dropdown" class="dropdown hidden">
            <a href="/logout">Log out</a>
        </div>
    </div>
</div>

<!-- Main Component -->
<div class="container">
    <h3>Reservations</h3>

    <!-- Search Form -->
    <form method="get" asp-controller="Reservation" asp-action="Index" class="search-section">
        <input type="text" name="search" placeholder="Search reservations..." value="@Context.Request.Query["search"]" />
        <button type="submit" class="search-btn">Search</button>
        <button type="button" class="add-btn" onclick="showCard()">Add Reservation</button>
    </form>

    <!-- Reservations Table -->
    <table class="table">
        <thead>
            <tr>
                <th>Status</th>
                <th>Car</th>
                <th>Days Left</th>
                <th>Start</th>
                <th>End</th>
                <th>Renter</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var res in Model.Reservations)
            {
                var car = res.Car;
                var renter = res.Renter;

                // Calculate how many days remain in the reservation
                var daysLeft = res.End > DateTime.Now ? (res.End - DateTime.Now).Days : 0;
                <tr>
                    <td><strong>@res.Status</strong></td>
                    <td>@($"{car?.Colour}, {car?.Model}, {car?.Make}, {car?.Year}")</td>
                    <td><span class="pill">@((res.End > DateTime.Now) ? $"{daysLeft} Days" : "N/A")</span></td>
                    <td>@res.Start.ToString("MMM dd")</td>
                    <td>@res.End.ToString("MMM dd")</td>
                    <td>
                        <!-- Display random photo and show renters name -->
                        <img src="https://randomuser.me/api/portraits/men/@(res.Id + 10).jpg" style="width:24px; height:24px; border-radius:50%;" />
                        @renter?.Name
                    </td>
                    <td>
                        <div class="action-buttons">
                            <!-- Pass reservation info into the edit popup via js -->
                            <button class="edit-btn"
                                    onclick="editReservation('@res.Id', '@res.Status', '@res.CarId', '@res.RenterId', '@res.Start.ToString("yyyy-MM-dd")', '@res.End.ToString("yyyy-MM-dd")')">
                                Edit
                            </button>
                            <a class="delete-btn" href="/reservations/delete/@res.Id">Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Add/Edit Reservation Card -->
<div class="card-overlay" id="cardOverlay" onclick="hideCard(event)">
    <div class="card" onclick="event.stopPropagation()">
        <span class="close-icon" onclick="hideCard(event)">×</span>
        <h3 id="cardTitle">Add Reservation</h3>

        <!-- Form is used for both add and edit, action is swapped dynamically -->
        <form method="post" asp-controller="Reservation" asp-action="Add" id="reservationForm">
            <input type="hidden" id="reservationId" name="Id" />
            <select name="Status">
                <option value="Confirmed">Confirmed</option>
                <option value="Completed">Completed</option>
                <option value="Upcoming">Upcoming</option>
            </select>
            <select name="CarId" required>
                @foreach (var car in Model.Cars)
                {
                    <option value="@car.Id">@($"{car.Colour}, {car.Model}, {car.Make}, {car.Year}")</option>
                }
            </select>
            <select name="RenterId" required>
                @foreach (var renter in Model.Renters)
                {
                    <option value="@renter.Id">@renter.Name</option>
                }
            </select>
            <input type="date" name="Start" required /> 
            <input type="date" name="End" required />
            <button type="submit">Submit</button>
        </form>
    </div>
</div>


<script>
    function toggleDropdown() {
        const dropdown = document.getElementById('dropdown');
        dropdown.classList.toggle('hidden');
    }

    document.addEventListener('click', function (event) {
        const wrapper = document.querySelector('.account-wrapper');
        const dropdown = document.getElementById('dropdown');
        if (!wrapper.contains(event.target)) {
            dropdown.classList.add('hidden');
        }
    });
        function showCard() {
        document.getElementById('cardTitle').innerText = 'Add New Reservation';
        document.getElementById('reservationForm').action = '/reservations/add';
        document.getElementById('reservationForm').reset();
        document.getElementById('reservationId').removeAttribute('name');
        document.getElementById('reservationId').value = '';
        document.getElementById('cardOverlay').style.display = 'flex';
    }

    function hideCard(event) {
        document.getElementById('cardOverlay').style.display = 'none';
    }

    function editReservation(id, status, carId, renterId, start, end) {
        document.getElementById('cardTitle').innerText = 'Edit Reservation';
        document.getElementById('reservationForm').action = '/reservations/edit/' + id;
        document.getElementById('reservationId').setAttribute('name', 'Id');
        document.getElementById('reservationId').value = id;
        document.querySelector('select[name="Status"]').value = status;
        document.querySelector('select[name="CarId"]').value = carId;
        document.querySelector('select[name="RenterId"]').value = renterId;
        document.querySelector('input[name="Start"]').value = start;
        document.querySelector('input[name="End"]').value = end;
        document.getElementById('cardOverlay').style.display = 'flex';
    }

</script>
